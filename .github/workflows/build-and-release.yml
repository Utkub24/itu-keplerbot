name: Build and release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        type: string
env:
  CARGO_TERM_COLOR: always
jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_extension: ''
            folder: 'linux-x64'
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_extension: '.exe'
            folder: 'windows-x64'
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_extension: ''
            folder: 'macos-arm64'
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_extension: ''
            folder: 'macos-x64'

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4

    - name: Add target
      run: rustup target add ${{ matrix.target }}
    
    - name: Build
      run: cargo build --release --target ${{ matrix.target }}
    
    - name: Create release folder and copy binary
      run: |
        mkdir -p release/${{ matrix.folder }}
        cp target/${{ matrix.target }}/release/itu-keplerbot${{ matrix.binary_extension }} release/${{ matrix.folder }}/
    
    - name: Create archive (Windows)
      if: ${{ matrix.target == 'x86_64-pc-windows-msvc' }}
      run: |
        cd release
        Compress-Archive -Path "${{ matrix.folder }}" -DestinationPath "itu-keplerbot-v${{ github.event.inputs.version }}-${{ matrix.folder }}.zip"

    - name: Create archive (Unix)
      if: ${{ matrix.target != 'x86_64-pc-windows-msvc' }}
      run: |
        cd release
        tar -czf itu-keplerbot-v${{ github.event.inputs.version }}-${{ matrix.folder }}.tar.gz ${{ matrix.folder }}/
    
    
    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ github.event.inputs.version }}
        name: Release v${{ github.event.inputs.version }}
        draft: false
        prerelease: false
        files: |
          release/itu-keplerbot-v${{ github.event.inputs.version }}-${{ matrix.folder }}.*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
